# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/walking_simulation
pkgincludedir = $(includedir)/walking_simulation
pkglibdir = $(libdir)/walking_simulation
pkglibexecdir = $(libexecdir)/walking_simulation
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = wsim$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(dist_doc_DATA) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/configure depcomp \
	install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)"
PROGRAMS = $(bin_PROGRAMS)
am_wsim_OBJECTS = alloca.$(OBJEXT) cccp.$(OBJEXT) obstack.$(OBJEXT) \
	version.$(OBJEXT) y.tab.$(OBJEXT) assigns.$(OBJEXT) \
	derivs.$(OBJEXT) Excitation_Functions.$(OBJEXT) \
	formain.$(OBJEXT) formain60.$(OBJEXT) formain_ga.$(OBJEXT) \
	gait_main.$(OBJEXT) GaussPattern.$(OBJEXT) gmc.$(OBJEXT) \
	inits.$(OBJEXT) invert.$(OBJEXT) mathtools.$(OBJEXT) \
	model_d.$(OBJEXT) model_s.$(OBJEXT) pipetools.$(OBJEXT) \
	readmuscles.$(OBJEXT) readtools.$(OBJEXT) sdfor.$(OBJEXT) \
	sdforWalk.$(OBJEXT) sdlib.$(OBJEXT) wrapping.$(OBJEXT) \
	BiModalPattern.$(OBJEXT) CostFunc.$(OBJEXT) \
	CostFunc_adjusted.$(OBJEXT) FileReadWrite.$(OBJEXT) \
	ga_i.$(OBJEXT) ga_main.$(OBJEXT) ga_pop.$(OBJEXT) \
	ModPattern.$(OBJEXT) SetExcPattern_Templates.$(OBJEXT) \
	SetParamBounds.$(OBJEXT) SetPattern.$(OBJEXT) \
	SetStructure.$(OBJEXT) Simann.$(OBJEXT) \
	UpdatePattern.$(OBJEXT)
wsim_OBJECTS = $(am_wsim_OBJECTS)
wsim_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(wsim_SOURCES)
DIST_SOURCES = $(wsim_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
DATA = $(dist_doc_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/cblair/src/walkingsimulation-1.0/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/cblair/src/walkingsimulation-1.0/missing --run tar
AUTOCONF = ${SHELL} /home/cblair/src/walkingsimulation-1.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/cblair/src/walkingsimulation-1.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/cblair/src/walkingsimulation-1.0/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/cblair/src/walkingsimulation-1.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = walking_simulation
PACKAGE_BUGREPORT = bug-automake@gnu.org
PACKAGE_NAME = walking_simulation
PACKAGE_STRING = walking_simulation 1.0
PACKAGE_TARNAME = walking_simulation
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0
abs_builddir = /home/cblair/src/walkingsimulation-1.0
abs_srcdir = /home/cblair/src/walkingsimulation-1.0
abs_top_builddir = /home/cblair/src/walkingsimulation-1.0
abs_top_srcdir = /home/cblair/src/walkingsimulation-1.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/cblair/src/walkingsimulation-1.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
dist_doc_DATA = README
#CC sources
#wsim_SOURCES += src/ga_i.c
#wsim_SOURCES += src/Copy of formain.c

#CXX sources
wsim_SOURCES = acpp/src/alloca.c acpp/src/cccp.c acpp/src/obstack.c \
	acpp/src/version.c acpp/src/y.tab.c src/assigns.c src/derivs.c \
	src/Excitation_Functions.c src/formain.c src/formain60.c \
	src/formain_ga.c src/gait_main.c src/GaussPattern.c src/gmc.c \
	src/inits.c src/invert.c src/mathtools.c src/model_d.c \
	src/model_s.c src/pipetools.c src/readmuscles.c \
	src/readtools.c src/sdfor.c src/sdforWalk.c src/sdlib.c \
	src/wrapping.c src/BiModalPattern.cpp src/CostFunc.cpp \
	src/CostFunc_adjusted.cpp src/FileReadWrite.cpp src/ga_i.cpp \
	src/ga_main.cpp src/ga_pop.cpp src/ModPattern.cpp \
	src/SetExcPattern_Templates.cpp src/SetParamBounds.cpp \
	src/SetPattern.cpp src/SetStructure.cpp src/Simann.cpp \
	src/UpdatePattern.cpp
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
wsim$(EXEEXT): $(wsim_OBJECTS) $(wsim_DEPENDENCIES) 
	@rm -f wsim$(EXEEXT)
	$(CXXLINK) $(wsim_OBJECTS) $(wsim_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/BiModalPattern.Po
include ./$(DEPDIR)/CostFunc.Po
include ./$(DEPDIR)/CostFunc_adjusted.Po
include ./$(DEPDIR)/Excitation_Functions.Po
include ./$(DEPDIR)/FileReadWrite.Po
include ./$(DEPDIR)/GaussPattern.Po
include ./$(DEPDIR)/ModPattern.Po
include ./$(DEPDIR)/SetExcPattern_Templates.Po
include ./$(DEPDIR)/SetParamBounds.Po
include ./$(DEPDIR)/SetPattern.Po
include ./$(DEPDIR)/SetStructure.Po
include ./$(DEPDIR)/Simann.Po
include ./$(DEPDIR)/UpdatePattern.Po
include ./$(DEPDIR)/alloca.Po
include ./$(DEPDIR)/assigns.Po
include ./$(DEPDIR)/cccp.Po
include ./$(DEPDIR)/derivs.Po
include ./$(DEPDIR)/formain.Po
include ./$(DEPDIR)/formain60.Po
include ./$(DEPDIR)/formain_ga.Po
include ./$(DEPDIR)/ga_i.Po
include ./$(DEPDIR)/ga_main.Po
include ./$(DEPDIR)/ga_pop.Po
include ./$(DEPDIR)/gait_main.Po
include ./$(DEPDIR)/gmc.Po
include ./$(DEPDIR)/inits.Po
include ./$(DEPDIR)/invert.Po
include ./$(DEPDIR)/mathtools.Po
include ./$(DEPDIR)/model_d.Po
include ./$(DEPDIR)/model_s.Po
include ./$(DEPDIR)/obstack.Po
include ./$(DEPDIR)/pipetools.Po
include ./$(DEPDIR)/readmuscles.Po
include ./$(DEPDIR)/readtools.Po
include ./$(DEPDIR)/sdfor.Po
include ./$(DEPDIR)/sdforWalk.Po
include ./$(DEPDIR)/sdlib.Po
include ./$(DEPDIR)/version.Po
include ./$(DEPDIR)/wrapping.Po
include ./$(DEPDIR)/y.tab.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

alloca.o: acpp/src/alloca.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT alloca.o -MD -MP -MF $(DEPDIR)/alloca.Tpo -c -o alloca.o `test -f 'acpp/src/alloca.c' || echo '$(srcdir)/'`acpp/src/alloca.c
	$(am__mv) $(DEPDIR)/alloca.Tpo $(DEPDIR)/alloca.Po
#	source='acpp/src/alloca.c' object='alloca.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alloca.o `test -f 'acpp/src/alloca.c' || echo '$(srcdir)/'`acpp/src/alloca.c

alloca.obj: acpp/src/alloca.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT alloca.obj -MD -MP -MF $(DEPDIR)/alloca.Tpo -c -o alloca.obj `if test -f 'acpp/src/alloca.c'; then $(CYGPATH_W) 'acpp/src/alloca.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/alloca.c'; fi`
	$(am__mv) $(DEPDIR)/alloca.Tpo $(DEPDIR)/alloca.Po
#	source='acpp/src/alloca.c' object='alloca.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alloca.obj `if test -f 'acpp/src/alloca.c'; then $(CYGPATH_W) 'acpp/src/alloca.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/alloca.c'; fi`

cccp.o: acpp/src/cccp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cccp.o -MD -MP -MF $(DEPDIR)/cccp.Tpo -c -o cccp.o `test -f 'acpp/src/cccp.c' || echo '$(srcdir)/'`acpp/src/cccp.c
	$(am__mv) $(DEPDIR)/cccp.Tpo $(DEPDIR)/cccp.Po
#	source='acpp/src/cccp.c' object='cccp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cccp.o `test -f 'acpp/src/cccp.c' || echo '$(srcdir)/'`acpp/src/cccp.c

cccp.obj: acpp/src/cccp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cccp.obj -MD -MP -MF $(DEPDIR)/cccp.Tpo -c -o cccp.obj `if test -f 'acpp/src/cccp.c'; then $(CYGPATH_W) 'acpp/src/cccp.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/cccp.c'; fi`
	$(am__mv) $(DEPDIR)/cccp.Tpo $(DEPDIR)/cccp.Po
#	source='acpp/src/cccp.c' object='cccp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cccp.obj `if test -f 'acpp/src/cccp.c'; then $(CYGPATH_W) 'acpp/src/cccp.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/cccp.c'; fi`

obstack.o: acpp/src/obstack.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT obstack.o -MD -MP -MF $(DEPDIR)/obstack.Tpo -c -o obstack.o `test -f 'acpp/src/obstack.c' || echo '$(srcdir)/'`acpp/src/obstack.c
	$(am__mv) $(DEPDIR)/obstack.Tpo $(DEPDIR)/obstack.Po
#	source='acpp/src/obstack.c' object='obstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o obstack.o `test -f 'acpp/src/obstack.c' || echo '$(srcdir)/'`acpp/src/obstack.c

obstack.obj: acpp/src/obstack.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT obstack.obj -MD -MP -MF $(DEPDIR)/obstack.Tpo -c -o obstack.obj `if test -f 'acpp/src/obstack.c'; then $(CYGPATH_W) 'acpp/src/obstack.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/obstack.c'; fi`
	$(am__mv) $(DEPDIR)/obstack.Tpo $(DEPDIR)/obstack.Po
#	source='acpp/src/obstack.c' object='obstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o obstack.obj `if test -f 'acpp/src/obstack.c'; then $(CYGPATH_W) 'acpp/src/obstack.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/obstack.c'; fi`

version.o: acpp/src/version.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT version.o -MD -MP -MF $(DEPDIR)/version.Tpo -c -o version.o `test -f 'acpp/src/version.c' || echo '$(srcdir)/'`acpp/src/version.c
	$(am__mv) $(DEPDIR)/version.Tpo $(DEPDIR)/version.Po
#	source='acpp/src/version.c' object='version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o version.o `test -f 'acpp/src/version.c' || echo '$(srcdir)/'`acpp/src/version.c

version.obj: acpp/src/version.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT version.obj -MD -MP -MF $(DEPDIR)/version.Tpo -c -o version.obj `if test -f 'acpp/src/version.c'; then $(CYGPATH_W) 'acpp/src/version.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/version.c'; fi`
	$(am__mv) $(DEPDIR)/version.Tpo $(DEPDIR)/version.Po
#	source='acpp/src/version.c' object='version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o version.obj `if test -f 'acpp/src/version.c'; then $(CYGPATH_W) 'acpp/src/version.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/version.c'; fi`

y.tab.o: acpp/src/y.tab.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT y.tab.o -MD -MP -MF $(DEPDIR)/y.tab.Tpo -c -o y.tab.o `test -f 'acpp/src/y.tab.c' || echo '$(srcdir)/'`acpp/src/y.tab.c
	$(am__mv) $(DEPDIR)/y.tab.Tpo $(DEPDIR)/y.tab.Po
#	source='acpp/src/y.tab.c' object='y.tab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o y.tab.o `test -f 'acpp/src/y.tab.c' || echo '$(srcdir)/'`acpp/src/y.tab.c

y.tab.obj: acpp/src/y.tab.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT y.tab.obj -MD -MP -MF $(DEPDIR)/y.tab.Tpo -c -o y.tab.obj `if test -f 'acpp/src/y.tab.c'; then $(CYGPATH_W) 'acpp/src/y.tab.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/y.tab.c'; fi`
	$(am__mv) $(DEPDIR)/y.tab.Tpo $(DEPDIR)/y.tab.Po
#	source='acpp/src/y.tab.c' object='y.tab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o y.tab.obj `if test -f 'acpp/src/y.tab.c'; then $(CYGPATH_W) 'acpp/src/y.tab.c'; else $(CYGPATH_W) '$(srcdir)/acpp/src/y.tab.c'; fi`

assigns.o: src/assigns.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT assigns.o -MD -MP -MF $(DEPDIR)/assigns.Tpo -c -o assigns.o `test -f 'src/assigns.c' || echo '$(srcdir)/'`src/assigns.c
	$(am__mv) $(DEPDIR)/assigns.Tpo $(DEPDIR)/assigns.Po
#	source='src/assigns.c' object='assigns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o assigns.o `test -f 'src/assigns.c' || echo '$(srcdir)/'`src/assigns.c

assigns.obj: src/assigns.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT assigns.obj -MD -MP -MF $(DEPDIR)/assigns.Tpo -c -o assigns.obj `if test -f 'src/assigns.c'; then $(CYGPATH_W) 'src/assigns.c'; else $(CYGPATH_W) '$(srcdir)/src/assigns.c'; fi`
	$(am__mv) $(DEPDIR)/assigns.Tpo $(DEPDIR)/assigns.Po
#	source='src/assigns.c' object='assigns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o assigns.obj `if test -f 'src/assigns.c'; then $(CYGPATH_W) 'src/assigns.c'; else $(CYGPATH_W) '$(srcdir)/src/assigns.c'; fi`

derivs.o: src/derivs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT derivs.o -MD -MP -MF $(DEPDIR)/derivs.Tpo -c -o derivs.o `test -f 'src/derivs.c' || echo '$(srcdir)/'`src/derivs.c
	$(am__mv) $(DEPDIR)/derivs.Tpo $(DEPDIR)/derivs.Po
#	source='src/derivs.c' object='derivs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o derivs.o `test -f 'src/derivs.c' || echo '$(srcdir)/'`src/derivs.c

derivs.obj: src/derivs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT derivs.obj -MD -MP -MF $(DEPDIR)/derivs.Tpo -c -o derivs.obj `if test -f 'src/derivs.c'; then $(CYGPATH_W) 'src/derivs.c'; else $(CYGPATH_W) '$(srcdir)/src/derivs.c'; fi`
	$(am__mv) $(DEPDIR)/derivs.Tpo $(DEPDIR)/derivs.Po
#	source='src/derivs.c' object='derivs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o derivs.obj `if test -f 'src/derivs.c'; then $(CYGPATH_W) 'src/derivs.c'; else $(CYGPATH_W) '$(srcdir)/src/derivs.c'; fi`

Excitation_Functions.o: src/Excitation_Functions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Excitation_Functions.o -MD -MP -MF $(DEPDIR)/Excitation_Functions.Tpo -c -o Excitation_Functions.o `test -f 'src/Excitation_Functions.c' || echo '$(srcdir)/'`src/Excitation_Functions.c
	$(am__mv) $(DEPDIR)/Excitation_Functions.Tpo $(DEPDIR)/Excitation_Functions.Po
#	source='src/Excitation_Functions.c' object='Excitation_Functions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Excitation_Functions.o `test -f 'src/Excitation_Functions.c' || echo '$(srcdir)/'`src/Excitation_Functions.c

Excitation_Functions.obj: src/Excitation_Functions.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Excitation_Functions.obj -MD -MP -MF $(DEPDIR)/Excitation_Functions.Tpo -c -o Excitation_Functions.obj `if test -f 'src/Excitation_Functions.c'; then $(CYGPATH_W) 'src/Excitation_Functions.c'; else $(CYGPATH_W) '$(srcdir)/src/Excitation_Functions.c'; fi`
	$(am__mv) $(DEPDIR)/Excitation_Functions.Tpo $(DEPDIR)/Excitation_Functions.Po
#	source='src/Excitation_Functions.c' object='Excitation_Functions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Excitation_Functions.obj `if test -f 'src/Excitation_Functions.c'; then $(CYGPATH_W) 'src/Excitation_Functions.c'; else $(CYGPATH_W) '$(srcdir)/src/Excitation_Functions.c'; fi`

formain.o: src/formain.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT formain.o -MD -MP -MF $(DEPDIR)/formain.Tpo -c -o formain.o `test -f 'src/formain.c' || echo '$(srcdir)/'`src/formain.c
	$(am__mv) $(DEPDIR)/formain.Tpo $(DEPDIR)/formain.Po
#	source='src/formain.c' object='formain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o formain.o `test -f 'src/formain.c' || echo '$(srcdir)/'`src/formain.c

formain.obj: src/formain.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT formain.obj -MD -MP -MF $(DEPDIR)/formain.Tpo -c -o formain.obj `if test -f 'src/formain.c'; then $(CYGPATH_W) 'src/formain.c'; else $(CYGPATH_W) '$(srcdir)/src/formain.c'; fi`
	$(am__mv) $(DEPDIR)/formain.Tpo $(DEPDIR)/formain.Po
#	source='src/formain.c' object='formain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o formain.obj `if test -f 'src/formain.c'; then $(CYGPATH_W) 'src/formain.c'; else $(CYGPATH_W) '$(srcdir)/src/formain.c'; fi`

formain60.o: src/formain60.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT formain60.o -MD -MP -MF $(DEPDIR)/formain60.Tpo -c -o formain60.o `test -f 'src/formain60.c' || echo '$(srcdir)/'`src/formain60.c
	$(am__mv) $(DEPDIR)/formain60.Tpo $(DEPDIR)/formain60.Po
#	source='src/formain60.c' object='formain60.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o formain60.o `test -f 'src/formain60.c' || echo '$(srcdir)/'`src/formain60.c

formain60.obj: src/formain60.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT formain60.obj -MD -MP -MF $(DEPDIR)/formain60.Tpo -c -o formain60.obj `if test -f 'src/formain60.c'; then $(CYGPATH_W) 'src/formain60.c'; else $(CYGPATH_W) '$(srcdir)/src/formain60.c'; fi`
	$(am__mv) $(DEPDIR)/formain60.Tpo $(DEPDIR)/formain60.Po
#	source='src/formain60.c' object='formain60.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o formain60.obj `if test -f 'src/formain60.c'; then $(CYGPATH_W) 'src/formain60.c'; else $(CYGPATH_W) '$(srcdir)/src/formain60.c'; fi`

formain_ga.o: src/formain_ga.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT formain_ga.o -MD -MP -MF $(DEPDIR)/formain_ga.Tpo -c -o formain_ga.o `test -f 'src/formain_ga.c' || echo '$(srcdir)/'`src/formain_ga.c
	$(am__mv) $(DEPDIR)/formain_ga.Tpo $(DEPDIR)/formain_ga.Po
#	source='src/formain_ga.c' object='formain_ga.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o formain_ga.o `test -f 'src/formain_ga.c' || echo '$(srcdir)/'`src/formain_ga.c

formain_ga.obj: src/formain_ga.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT formain_ga.obj -MD -MP -MF $(DEPDIR)/formain_ga.Tpo -c -o formain_ga.obj `if test -f 'src/formain_ga.c'; then $(CYGPATH_W) 'src/formain_ga.c'; else $(CYGPATH_W) '$(srcdir)/src/formain_ga.c'; fi`
	$(am__mv) $(DEPDIR)/formain_ga.Tpo $(DEPDIR)/formain_ga.Po
#	source='src/formain_ga.c' object='formain_ga.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o formain_ga.obj `if test -f 'src/formain_ga.c'; then $(CYGPATH_W) 'src/formain_ga.c'; else $(CYGPATH_W) '$(srcdir)/src/formain_ga.c'; fi`

gait_main.o: src/gait_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gait_main.o -MD -MP -MF $(DEPDIR)/gait_main.Tpo -c -o gait_main.o `test -f 'src/gait_main.c' || echo '$(srcdir)/'`src/gait_main.c
	$(am__mv) $(DEPDIR)/gait_main.Tpo $(DEPDIR)/gait_main.Po
#	source='src/gait_main.c' object='gait_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gait_main.o `test -f 'src/gait_main.c' || echo '$(srcdir)/'`src/gait_main.c

gait_main.obj: src/gait_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gait_main.obj -MD -MP -MF $(DEPDIR)/gait_main.Tpo -c -o gait_main.obj `if test -f 'src/gait_main.c'; then $(CYGPATH_W) 'src/gait_main.c'; else $(CYGPATH_W) '$(srcdir)/src/gait_main.c'; fi`
	$(am__mv) $(DEPDIR)/gait_main.Tpo $(DEPDIR)/gait_main.Po
#	source='src/gait_main.c' object='gait_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gait_main.obj `if test -f 'src/gait_main.c'; then $(CYGPATH_W) 'src/gait_main.c'; else $(CYGPATH_W) '$(srcdir)/src/gait_main.c'; fi`

GaussPattern.o: src/GaussPattern.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT GaussPattern.o -MD -MP -MF $(DEPDIR)/GaussPattern.Tpo -c -o GaussPattern.o `test -f 'src/GaussPattern.c' || echo '$(srcdir)/'`src/GaussPattern.c
	$(am__mv) $(DEPDIR)/GaussPattern.Tpo $(DEPDIR)/GaussPattern.Po
#	source='src/GaussPattern.c' object='GaussPattern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o GaussPattern.o `test -f 'src/GaussPattern.c' || echo '$(srcdir)/'`src/GaussPattern.c

GaussPattern.obj: src/GaussPattern.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT GaussPattern.obj -MD -MP -MF $(DEPDIR)/GaussPattern.Tpo -c -o GaussPattern.obj `if test -f 'src/GaussPattern.c'; then $(CYGPATH_W) 'src/GaussPattern.c'; else $(CYGPATH_W) '$(srcdir)/src/GaussPattern.c'; fi`
	$(am__mv) $(DEPDIR)/GaussPattern.Tpo $(DEPDIR)/GaussPattern.Po
#	source='src/GaussPattern.c' object='GaussPattern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o GaussPattern.obj `if test -f 'src/GaussPattern.c'; then $(CYGPATH_W) 'src/GaussPattern.c'; else $(CYGPATH_W) '$(srcdir)/src/GaussPattern.c'; fi`

gmc.o: src/gmc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gmc.o -MD -MP -MF $(DEPDIR)/gmc.Tpo -c -o gmc.o `test -f 'src/gmc.c' || echo '$(srcdir)/'`src/gmc.c
	$(am__mv) $(DEPDIR)/gmc.Tpo $(DEPDIR)/gmc.Po
#	source='src/gmc.c' object='gmc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gmc.o `test -f 'src/gmc.c' || echo '$(srcdir)/'`src/gmc.c

gmc.obj: src/gmc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gmc.obj -MD -MP -MF $(DEPDIR)/gmc.Tpo -c -o gmc.obj `if test -f 'src/gmc.c'; then $(CYGPATH_W) 'src/gmc.c'; else $(CYGPATH_W) '$(srcdir)/src/gmc.c'; fi`
	$(am__mv) $(DEPDIR)/gmc.Tpo $(DEPDIR)/gmc.Po
#	source='src/gmc.c' object='gmc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gmc.obj `if test -f 'src/gmc.c'; then $(CYGPATH_W) 'src/gmc.c'; else $(CYGPATH_W) '$(srcdir)/src/gmc.c'; fi`

inits.o: src/inits.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inits.o -MD -MP -MF $(DEPDIR)/inits.Tpo -c -o inits.o `test -f 'src/inits.c' || echo '$(srcdir)/'`src/inits.c
	$(am__mv) $(DEPDIR)/inits.Tpo $(DEPDIR)/inits.Po
#	source='src/inits.c' object='inits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inits.o `test -f 'src/inits.c' || echo '$(srcdir)/'`src/inits.c

inits.obj: src/inits.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inits.obj -MD -MP -MF $(DEPDIR)/inits.Tpo -c -o inits.obj `if test -f 'src/inits.c'; then $(CYGPATH_W) 'src/inits.c'; else $(CYGPATH_W) '$(srcdir)/src/inits.c'; fi`
	$(am__mv) $(DEPDIR)/inits.Tpo $(DEPDIR)/inits.Po
#	source='src/inits.c' object='inits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inits.obj `if test -f 'src/inits.c'; then $(CYGPATH_W) 'src/inits.c'; else $(CYGPATH_W) '$(srcdir)/src/inits.c'; fi`

invert.o: src/invert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invert.o -MD -MP -MF $(DEPDIR)/invert.Tpo -c -o invert.o `test -f 'src/invert.c' || echo '$(srcdir)/'`src/invert.c
	$(am__mv) $(DEPDIR)/invert.Tpo $(DEPDIR)/invert.Po
#	source='src/invert.c' object='invert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invert.o `test -f 'src/invert.c' || echo '$(srcdir)/'`src/invert.c

invert.obj: src/invert.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT invert.obj -MD -MP -MF $(DEPDIR)/invert.Tpo -c -o invert.obj `if test -f 'src/invert.c'; then $(CYGPATH_W) 'src/invert.c'; else $(CYGPATH_W) '$(srcdir)/src/invert.c'; fi`
	$(am__mv) $(DEPDIR)/invert.Tpo $(DEPDIR)/invert.Po
#	source='src/invert.c' object='invert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o invert.obj `if test -f 'src/invert.c'; then $(CYGPATH_W) 'src/invert.c'; else $(CYGPATH_W) '$(srcdir)/src/invert.c'; fi`

mathtools.o: src/mathtools.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mathtools.o -MD -MP -MF $(DEPDIR)/mathtools.Tpo -c -o mathtools.o `test -f 'src/mathtools.c' || echo '$(srcdir)/'`src/mathtools.c
	$(am__mv) $(DEPDIR)/mathtools.Tpo $(DEPDIR)/mathtools.Po
#	source='src/mathtools.c' object='mathtools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mathtools.o `test -f 'src/mathtools.c' || echo '$(srcdir)/'`src/mathtools.c

mathtools.obj: src/mathtools.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mathtools.obj -MD -MP -MF $(DEPDIR)/mathtools.Tpo -c -o mathtools.obj `if test -f 'src/mathtools.c'; then $(CYGPATH_W) 'src/mathtools.c'; else $(CYGPATH_W) '$(srcdir)/src/mathtools.c'; fi`
	$(am__mv) $(DEPDIR)/mathtools.Tpo $(DEPDIR)/mathtools.Po
#	source='src/mathtools.c' object='mathtools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mathtools.obj `if test -f 'src/mathtools.c'; then $(CYGPATH_W) 'src/mathtools.c'; else $(CYGPATH_W) '$(srcdir)/src/mathtools.c'; fi`

model_d.o: src/model_d.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT model_d.o -MD -MP -MF $(DEPDIR)/model_d.Tpo -c -o model_d.o `test -f 'src/model_d.c' || echo '$(srcdir)/'`src/model_d.c
	$(am__mv) $(DEPDIR)/model_d.Tpo $(DEPDIR)/model_d.Po
#	source='src/model_d.c' object='model_d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o model_d.o `test -f 'src/model_d.c' || echo '$(srcdir)/'`src/model_d.c

model_d.obj: src/model_d.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT model_d.obj -MD -MP -MF $(DEPDIR)/model_d.Tpo -c -o model_d.obj `if test -f 'src/model_d.c'; then $(CYGPATH_W) 'src/model_d.c'; else $(CYGPATH_W) '$(srcdir)/src/model_d.c'; fi`
	$(am__mv) $(DEPDIR)/model_d.Tpo $(DEPDIR)/model_d.Po
#	source='src/model_d.c' object='model_d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o model_d.obj `if test -f 'src/model_d.c'; then $(CYGPATH_W) 'src/model_d.c'; else $(CYGPATH_W) '$(srcdir)/src/model_d.c'; fi`

model_s.o: src/model_s.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT model_s.o -MD -MP -MF $(DEPDIR)/model_s.Tpo -c -o model_s.o `test -f 'src/model_s.c' || echo '$(srcdir)/'`src/model_s.c
	$(am__mv) $(DEPDIR)/model_s.Tpo $(DEPDIR)/model_s.Po
#	source='src/model_s.c' object='model_s.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o model_s.o `test -f 'src/model_s.c' || echo '$(srcdir)/'`src/model_s.c

model_s.obj: src/model_s.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT model_s.obj -MD -MP -MF $(DEPDIR)/model_s.Tpo -c -o model_s.obj `if test -f 'src/model_s.c'; then $(CYGPATH_W) 'src/model_s.c'; else $(CYGPATH_W) '$(srcdir)/src/model_s.c'; fi`
	$(am__mv) $(DEPDIR)/model_s.Tpo $(DEPDIR)/model_s.Po
#	source='src/model_s.c' object='model_s.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o model_s.obj `if test -f 'src/model_s.c'; then $(CYGPATH_W) 'src/model_s.c'; else $(CYGPATH_W) '$(srcdir)/src/model_s.c'; fi`

pipetools.o: src/pipetools.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pipetools.o -MD -MP -MF $(DEPDIR)/pipetools.Tpo -c -o pipetools.o `test -f 'src/pipetools.c' || echo '$(srcdir)/'`src/pipetools.c
	$(am__mv) $(DEPDIR)/pipetools.Tpo $(DEPDIR)/pipetools.Po
#	source='src/pipetools.c' object='pipetools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pipetools.o `test -f 'src/pipetools.c' || echo '$(srcdir)/'`src/pipetools.c

pipetools.obj: src/pipetools.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pipetools.obj -MD -MP -MF $(DEPDIR)/pipetools.Tpo -c -o pipetools.obj `if test -f 'src/pipetools.c'; then $(CYGPATH_W) 'src/pipetools.c'; else $(CYGPATH_W) '$(srcdir)/src/pipetools.c'; fi`
	$(am__mv) $(DEPDIR)/pipetools.Tpo $(DEPDIR)/pipetools.Po
#	source='src/pipetools.c' object='pipetools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pipetools.obj `if test -f 'src/pipetools.c'; then $(CYGPATH_W) 'src/pipetools.c'; else $(CYGPATH_W) '$(srcdir)/src/pipetools.c'; fi`

readmuscles.o: src/readmuscles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readmuscles.o -MD -MP -MF $(DEPDIR)/readmuscles.Tpo -c -o readmuscles.o `test -f 'src/readmuscles.c' || echo '$(srcdir)/'`src/readmuscles.c
	$(am__mv) $(DEPDIR)/readmuscles.Tpo $(DEPDIR)/readmuscles.Po
#	source='src/readmuscles.c' object='readmuscles.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readmuscles.o `test -f 'src/readmuscles.c' || echo '$(srcdir)/'`src/readmuscles.c

readmuscles.obj: src/readmuscles.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readmuscles.obj -MD -MP -MF $(DEPDIR)/readmuscles.Tpo -c -o readmuscles.obj `if test -f 'src/readmuscles.c'; then $(CYGPATH_W) 'src/readmuscles.c'; else $(CYGPATH_W) '$(srcdir)/src/readmuscles.c'; fi`
	$(am__mv) $(DEPDIR)/readmuscles.Tpo $(DEPDIR)/readmuscles.Po
#	source='src/readmuscles.c' object='readmuscles.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readmuscles.obj `if test -f 'src/readmuscles.c'; then $(CYGPATH_W) 'src/readmuscles.c'; else $(CYGPATH_W) '$(srcdir)/src/readmuscles.c'; fi`

readtools.o: src/readtools.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readtools.o -MD -MP -MF $(DEPDIR)/readtools.Tpo -c -o readtools.o `test -f 'src/readtools.c' || echo '$(srcdir)/'`src/readtools.c
	$(am__mv) $(DEPDIR)/readtools.Tpo $(DEPDIR)/readtools.Po
#	source='src/readtools.c' object='readtools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readtools.o `test -f 'src/readtools.c' || echo '$(srcdir)/'`src/readtools.c

readtools.obj: src/readtools.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT readtools.obj -MD -MP -MF $(DEPDIR)/readtools.Tpo -c -o readtools.obj `if test -f 'src/readtools.c'; then $(CYGPATH_W) 'src/readtools.c'; else $(CYGPATH_W) '$(srcdir)/src/readtools.c'; fi`
	$(am__mv) $(DEPDIR)/readtools.Tpo $(DEPDIR)/readtools.Po
#	source='src/readtools.c' object='readtools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o readtools.obj `if test -f 'src/readtools.c'; then $(CYGPATH_W) 'src/readtools.c'; else $(CYGPATH_W) '$(srcdir)/src/readtools.c'; fi`

sdfor.o: src/sdfor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdfor.o -MD -MP -MF $(DEPDIR)/sdfor.Tpo -c -o sdfor.o `test -f 'src/sdfor.c' || echo '$(srcdir)/'`src/sdfor.c
	$(am__mv) $(DEPDIR)/sdfor.Tpo $(DEPDIR)/sdfor.Po
#	source='src/sdfor.c' object='sdfor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdfor.o `test -f 'src/sdfor.c' || echo '$(srcdir)/'`src/sdfor.c

sdfor.obj: src/sdfor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdfor.obj -MD -MP -MF $(DEPDIR)/sdfor.Tpo -c -o sdfor.obj `if test -f 'src/sdfor.c'; then $(CYGPATH_W) 'src/sdfor.c'; else $(CYGPATH_W) '$(srcdir)/src/sdfor.c'; fi`
	$(am__mv) $(DEPDIR)/sdfor.Tpo $(DEPDIR)/sdfor.Po
#	source='src/sdfor.c' object='sdfor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdfor.obj `if test -f 'src/sdfor.c'; then $(CYGPATH_W) 'src/sdfor.c'; else $(CYGPATH_W) '$(srcdir)/src/sdfor.c'; fi`

sdforWalk.o: src/sdforWalk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdforWalk.o -MD -MP -MF $(DEPDIR)/sdforWalk.Tpo -c -o sdforWalk.o `test -f 'src/sdforWalk.c' || echo '$(srcdir)/'`src/sdforWalk.c
	$(am__mv) $(DEPDIR)/sdforWalk.Tpo $(DEPDIR)/sdforWalk.Po
#	source='src/sdforWalk.c' object='sdforWalk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdforWalk.o `test -f 'src/sdforWalk.c' || echo '$(srcdir)/'`src/sdforWalk.c

sdforWalk.obj: src/sdforWalk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdforWalk.obj -MD -MP -MF $(DEPDIR)/sdforWalk.Tpo -c -o sdforWalk.obj `if test -f 'src/sdforWalk.c'; then $(CYGPATH_W) 'src/sdforWalk.c'; else $(CYGPATH_W) '$(srcdir)/src/sdforWalk.c'; fi`
	$(am__mv) $(DEPDIR)/sdforWalk.Tpo $(DEPDIR)/sdforWalk.Po
#	source='src/sdforWalk.c' object='sdforWalk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdforWalk.obj `if test -f 'src/sdforWalk.c'; then $(CYGPATH_W) 'src/sdforWalk.c'; else $(CYGPATH_W) '$(srcdir)/src/sdforWalk.c'; fi`

sdlib.o: src/sdlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdlib.o -MD -MP -MF $(DEPDIR)/sdlib.Tpo -c -o sdlib.o `test -f 'src/sdlib.c' || echo '$(srcdir)/'`src/sdlib.c
	$(am__mv) $(DEPDIR)/sdlib.Tpo $(DEPDIR)/sdlib.Po
#	source='src/sdlib.c' object='sdlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdlib.o `test -f 'src/sdlib.c' || echo '$(srcdir)/'`src/sdlib.c

sdlib.obj: src/sdlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdlib.obj -MD -MP -MF $(DEPDIR)/sdlib.Tpo -c -o sdlib.obj `if test -f 'src/sdlib.c'; then $(CYGPATH_W) 'src/sdlib.c'; else $(CYGPATH_W) '$(srcdir)/src/sdlib.c'; fi`
	$(am__mv) $(DEPDIR)/sdlib.Tpo $(DEPDIR)/sdlib.Po
#	source='src/sdlib.c' object='sdlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdlib.obj `if test -f 'src/sdlib.c'; then $(CYGPATH_W) 'src/sdlib.c'; else $(CYGPATH_W) '$(srcdir)/src/sdlib.c'; fi`

wrapping.o: src/wrapping.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wrapping.o -MD -MP -MF $(DEPDIR)/wrapping.Tpo -c -o wrapping.o `test -f 'src/wrapping.c' || echo '$(srcdir)/'`src/wrapping.c
	$(am__mv) $(DEPDIR)/wrapping.Tpo $(DEPDIR)/wrapping.Po
#	source='src/wrapping.c' object='wrapping.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wrapping.o `test -f 'src/wrapping.c' || echo '$(srcdir)/'`src/wrapping.c

wrapping.obj: src/wrapping.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT wrapping.obj -MD -MP -MF $(DEPDIR)/wrapping.Tpo -c -o wrapping.obj `if test -f 'src/wrapping.c'; then $(CYGPATH_W) 'src/wrapping.c'; else $(CYGPATH_W) '$(srcdir)/src/wrapping.c'; fi`
	$(am__mv) $(DEPDIR)/wrapping.Tpo $(DEPDIR)/wrapping.Po
#	source='src/wrapping.c' object='wrapping.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o wrapping.obj `if test -f 'src/wrapping.c'; then $(CYGPATH_W) 'src/wrapping.c'; else $(CYGPATH_W) '$(srcdir)/src/wrapping.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

BiModalPattern.o: src/BiModalPattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BiModalPattern.o -MD -MP -MF $(DEPDIR)/BiModalPattern.Tpo -c -o BiModalPattern.o `test -f 'src/BiModalPattern.cpp' || echo '$(srcdir)/'`src/BiModalPattern.cpp
	$(am__mv) $(DEPDIR)/BiModalPattern.Tpo $(DEPDIR)/BiModalPattern.Po
#	source='src/BiModalPattern.cpp' object='BiModalPattern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BiModalPattern.o `test -f 'src/BiModalPattern.cpp' || echo '$(srcdir)/'`src/BiModalPattern.cpp

BiModalPattern.obj: src/BiModalPattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BiModalPattern.obj -MD -MP -MF $(DEPDIR)/BiModalPattern.Tpo -c -o BiModalPattern.obj `if test -f 'src/BiModalPattern.cpp'; then $(CYGPATH_W) 'src/BiModalPattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/BiModalPattern.cpp'; fi`
	$(am__mv) $(DEPDIR)/BiModalPattern.Tpo $(DEPDIR)/BiModalPattern.Po
#	source='src/BiModalPattern.cpp' object='BiModalPattern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BiModalPattern.obj `if test -f 'src/BiModalPattern.cpp'; then $(CYGPATH_W) 'src/BiModalPattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/BiModalPattern.cpp'; fi`

CostFunc.o: src/CostFunc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CostFunc.o -MD -MP -MF $(DEPDIR)/CostFunc.Tpo -c -o CostFunc.o `test -f 'src/CostFunc.cpp' || echo '$(srcdir)/'`src/CostFunc.cpp
	$(am__mv) $(DEPDIR)/CostFunc.Tpo $(DEPDIR)/CostFunc.Po
#	source='src/CostFunc.cpp' object='CostFunc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CostFunc.o `test -f 'src/CostFunc.cpp' || echo '$(srcdir)/'`src/CostFunc.cpp

CostFunc.obj: src/CostFunc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CostFunc.obj -MD -MP -MF $(DEPDIR)/CostFunc.Tpo -c -o CostFunc.obj `if test -f 'src/CostFunc.cpp'; then $(CYGPATH_W) 'src/CostFunc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CostFunc.cpp'; fi`
	$(am__mv) $(DEPDIR)/CostFunc.Tpo $(DEPDIR)/CostFunc.Po
#	source='src/CostFunc.cpp' object='CostFunc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CostFunc.obj `if test -f 'src/CostFunc.cpp'; then $(CYGPATH_W) 'src/CostFunc.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CostFunc.cpp'; fi`

CostFunc_adjusted.o: src/CostFunc_adjusted.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CostFunc_adjusted.o -MD -MP -MF $(DEPDIR)/CostFunc_adjusted.Tpo -c -o CostFunc_adjusted.o `test -f 'src/CostFunc_adjusted.cpp' || echo '$(srcdir)/'`src/CostFunc_adjusted.cpp
	$(am__mv) $(DEPDIR)/CostFunc_adjusted.Tpo $(DEPDIR)/CostFunc_adjusted.Po
#	source='src/CostFunc_adjusted.cpp' object='CostFunc_adjusted.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CostFunc_adjusted.o `test -f 'src/CostFunc_adjusted.cpp' || echo '$(srcdir)/'`src/CostFunc_adjusted.cpp

CostFunc_adjusted.obj: src/CostFunc_adjusted.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CostFunc_adjusted.obj -MD -MP -MF $(DEPDIR)/CostFunc_adjusted.Tpo -c -o CostFunc_adjusted.obj `if test -f 'src/CostFunc_adjusted.cpp'; then $(CYGPATH_W) 'src/CostFunc_adjusted.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CostFunc_adjusted.cpp'; fi`
	$(am__mv) $(DEPDIR)/CostFunc_adjusted.Tpo $(DEPDIR)/CostFunc_adjusted.Po
#	source='src/CostFunc_adjusted.cpp' object='CostFunc_adjusted.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CostFunc_adjusted.obj `if test -f 'src/CostFunc_adjusted.cpp'; then $(CYGPATH_W) 'src/CostFunc_adjusted.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CostFunc_adjusted.cpp'; fi`

FileReadWrite.o: src/FileReadWrite.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileReadWrite.o -MD -MP -MF $(DEPDIR)/FileReadWrite.Tpo -c -o FileReadWrite.o `test -f 'src/FileReadWrite.cpp' || echo '$(srcdir)/'`src/FileReadWrite.cpp
	$(am__mv) $(DEPDIR)/FileReadWrite.Tpo $(DEPDIR)/FileReadWrite.Po
#	source='src/FileReadWrite.cpp' object='FileReadWrite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileReadWrite.o `test -f 'src/FileReadWrite.cpp' || echo '$(srcdir)/'`src/FileReadWrite.cpp

FileReadWrite.obj: src/FileReadWrite.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileReadWrite.obj -MD -MP -MF $(DEPDIR)/FileReadWrite.Tpo -c -o FileReadWrite.obj `if test -f 'src/FileReadWrite.cpp'; then $(CYGPATH_W) 'src/FileReadWrite.cpp'; else $(CYGPATH_W) '$(srcdir)/src/FileReadWrite.cpp'; fi`
	$(am__mv) $(DEPDIR)/FileReadWrite.Tpo $(DEPDIR)/FileReadWrite.Po
#	source='src/FileReadWrite.cpp' object='FileReadWrite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileReadWrite.obj `if test -f 'src/FileReadWrite.cpp'; then $(CYGPATH_W) 'src/FileReadWrite.cpp'; else $(CYGPATH_W) '$(srcdir)/src/FileReadWrite.cpp'; fi`

ga_i.o: src/ga_i.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ga_i.o -MD -MP -MF $(DEPDIR)/ga_i.Tpo -c -o ga_i.o `test -f 'src/ga_i.cpp' || echo '$(srcdir)/'`src/ga_i.cpp
	$(am__mv) $(DEPDIR)/ga_i.Tpo $(DEPDIR)/ga_i.Po
#	source='src/ga_i.cpp' object='ga_i.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ga_i.o `test -f 'src/ga_i.cpp' || echo '$(srcdir)/'`src/ga_i.cpp

ga_i.obj: src/ga_i.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ga_i.obj -MD -MP -MF $(DEPDIR)/ga_i.Tpo -c -o ga_i.obj `if test -f 'src/ga_i.cpp'; then $(CYGPATH_W) 'src/ga_i.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ga_i.cpp'; fi`
	$(am__mv) $(DEPDIR)/ga_i.Tpo $(DEPDIR)/ga_i.Po
#	source='src/ga_i.cpp' object='ga_i.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ga_i.obj `if test -f 'src/ga_i.cpp'; then $(CYGPATH_W) 'src/ga_i.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ga_i.cpp'; fi`

ga_main.o: src/ga_main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ga_main.o -MD -MP -MF $(DEPDIR)/ga_main.Tpo -c -o ga_main.o `test -f 'src/ga_main.cpp' || echo '$(srcdir)/'`src/ga_main.cpp
	$(am__mv) $(DEPDIR)/ga_main.Tpo $(DEPDIR)/ga_main.Po
#	source='src/ga_main.cpp' object='ga_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ga_main.o `test -f 'src/ga_main.cpp' || echo '$(srcdir)/'`src/ga_main.cpp

ga_main.obj: src/ga_main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ga_main.obj -MD -MP -MF $(DEPDIR)/ga_main.Tpo -c -o ga_main.obj `if test -f 'src/ga_main.cpp'; then $(CYGPATH_W) 'src/ga_main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ga_main.cpp'; fi`
	$(am__mv) $(DEPDIR)/ga_main.Tpo $(DEPDIR)/ga_main.Po
#	source='src/ga_main.cpp' object='ga_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ga_main.obj `if test -f 'src/ga_main.cpp'; then $(CYGPATH_W) 'src/ga_main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ga_main.cpp'; fi`

ga_pop.o: src/ga_pop.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ga_pop.o -MD -MP -MF $(DEPDIR)/ga_pop.Tpo -c -o ga_pop.o `test -f 'src/ga_pop.cpp' || echo '$(srcdir)/'`src/ga_pop.cpp
	$(am__mv) $(DEPDIR)/ga_pop.Tpo $(DEPDIR)/ga_pop.Po
#	source='src/ga_pop.cpp' object='ga_pop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ga_pop.o `test -f 'src/ga_pop.cpp' || echo '$(srcdir)/'`src/ga_pop.cpp

ga_pop.obj: src/ga_pop.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ga_pop.obj -MD -MP -MF $(DEPDIR)/ga_pop.Tpo -c -o ga_pop.obj `if test -f 'src/ga_pop.cpp'; then $(CYGPATH_W) 'src/ga_pop.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ga_pop.cpp'; fi`
	$(am__mv) $(DEPDIR)/ga_pop.Tpo $(DEPDIR)/ga_pop.Po
#	source='src/ga_pop.cpp' object='ga_pop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ga_pop.obj `if test -f 'src/ga_pop.cpp'; then $(CYGPATH_W) 'src/ga_pop.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ga_pop.cpp'; fi`

ModPattern.o: src/ModPattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ModPattern.o -MD -MP -MF $(DEPDIR)/ModPattern.Tpo -c -o ModPattern.o `test -f 'src/ModPattern.cpp' || echo '$(srcdir)/'`src/ModPattern.cpp
	$(am__mv) $(DEPDIR)/ModPattern.Tpo $(DEPDIR)/ModPattern.Po
#	source='src/ModPattern.cpp' object='ModPattern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ModPattern.o `test -f 'src/ModPattern.cpp' || echo '$(srcdir)/'`src/ModPattern.cpp

ModPattern.obj: src/ModPattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ModPattern.obj -MD -MP -MF $(DEPDIR)/ModPattern.Tpo -c -o ModPattern.obj `if test -f 'src/ModPattern.cpp'; then $(CYGPATH_W) 'src/ModPattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ModPattern.cpp'; fi`
	$(am__mv) $(DEPDIR)/ModPattern.Tpo $(DEPDIR)/ModPattern.Po
#	source='src/ModPattern.cpp' object='ModPattern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ModPattern.obj `if test -f 'src/ModPattern.cpp'; then $(CYGPATH_W) 'src/ModPattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ModPattern.cpp'; fi`

SetExcPattern_Templates.o: src/SetExcPattern_Templates.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetExcPattern_Templates.o -MD -MP -MF $(DEPDIR)/SetExcPattern_Templates.Tpo -c -o SetExcPattern_Templates.o `test -f 'src/SetExcPattern_Templates.cpp' || echo '$(srcdir)/'`src/SetExcPattern_Templates.cpp
	$(am__mv) $(DEPDIR)/SetExcPattern_Templates.Tpo $(DEPDIR)/SetExcPattern_Templates.Po
#	source='src/SetExcPattern_Templates.cpp' object='SetExcPattern_Templates.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetExcPattern_Templates.o `test -f 'src/SetExcPattern_Templates.cpp' || echo '$(srcdir)/'`src/SetExcPattern_Templates.cpp

SetExcPattern_Templates.obj: src/SetExcPattern_Templates.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetExcPattern_Templates.obj -MD -MP -MF $(DEPDIR)/SetExcPattern_Templates.Tpo -c -o SetExcPattern_Templates.obj `if test -f 'src/SetExcPattern_Templates.cpp'; then $(CYGPATH_W) 'src/SetExcPattern_Templates.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetExcPattern_Templates.cpp'; fi`
	$(am__mv) $(DEPDIR)/SetExcPattern_Templates.Tpo $(DEPDIR)/SetExcPattern_Templates.Po
#	source='src/SetExcPattern_Templates.cpp' object='SetExcPattern_Templates.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetExcPattern_Templates.obj `if test -f 'src/SetExcPattern_Templates.cpp'; then $(CYGPATH_W) 'src/SetExcPattern_Templates.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetExcPattern_Templates.cpp'; fi`

SetParamBounds.o: src/SetParamBounds.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetParamBounds.o -MD -MP -MF $(DEPDIR)/SetParamBounds.Tpo -c -o SetParamBounds.o `test -f 'src/SetParamBounds.cpp' || echo '$(srcdir)/'`src/SetParamBounds.cpp
	$(am__mv) $(DEPDIR)/SetParamBounds.Tpo $(DEPDIR)/SetParamBounds.Po
#	source='src/SetParamBounds.cpp' object='SetParamBounds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetParamBounds.o `test -f 'src/SetParamBounds.cpp' || echo '$(srcdir)/'`src/SetParamBounds.cpp

SetParamBounds.obj: src/SetParamBounds.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetParamBounds.obj -MD -MP -MF $(DEPDIR)/SetParamBounds.Tpo -c -o SetParamBounds.obj `if test -f 'src/SetParamBounds.cpp'; then $(CYGPATH_W) 'src/SetParamBounds.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetParamBounds.cpp'; fi`
	$(am__mv) $(DEPDIR)/SetParamBounds.Tpo $(DEPDIR)/SetParamBounds.Po
#	source='src/SetParamBounds.cpp' object='SetParamBounds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetParamBounds.obj `if test -f 'src/SetParamBounds.cpp'; then $(CYGPATH_W) 'src/SetParamBounds.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetParamBounds.cpp'; fi`

SetPattern.o: src/SetPattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetPattern.o -MD -MP -MF $(DEPDIR)/SetPattern.Tpo -c -o SetPattern.o `test -f 'src/SetPattern.cpp' || echo '$(srcdir)/'`src/SetPattern.cpp
	$(am__mv) $(DEPDIR)/SetPattern.Tpo $(DEPDIR)/SetPattern.Po
#	source='src/SetPattern.cpp' object='SetPattern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetPattern.o `test -f 'src/SetPattern.cpp' || echo '$(srcdir)/'`src/SetPattern.cpp

SetPattern.obj: src/SetPattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetPattern.obj -MD -MP -MF $(DEPDIR)/SetPattern.Tpo -c -o SetPattern.obj `if test -f 'src/SetPattern.cpp'; then $(CYGPATH_W) 'src/SetPattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetPattern.cpp'; fi`
	$(am__mv) $(DEPDIR)/SetPattern.Tpo $(DEPDIR)/SetPattern.Po
#	source='src/SetPattern.cpp' object='SetPattern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetPattern.obj `if test -f 'src/SetPattern.cpp'; then $(CYGPATH_W) 'src/SetPattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetPattern.cpp'; fi`

SetStructure.o: src/SetStructure.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetStructure.o -MD -MP -MF $(DEPDIR)/SetStructure.Tpo -c -o SetStructure.o `test -f 'src/SetStructure.cpp' || echo '$(srcdir)/'`src/SetStructure.cpp
	$(am__mv) $(DEPDIR)/SetStructure.Tpo $(DEPDIR)/SetStructure.Po
#	source='src/SetStructure.cpp' object='SetStructure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetStructure.o `test -f 'src/SetStructure.cpp' || echo '$(srcdir)/'`src/SetStructure.cpp

SetStructure.obj: src/SetStructure.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SetStructure.obj -MD -MP -MF $(DEPDIR)/SetStructure.Tpo -c -o SetStructure.obj `if test -f 'src/SetStructure.cpp'; then $(CYGPATH_W) 'src/SetStructure.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetStructure.cpp'; fi`
	$(am__mv) $(DEPDIR)/SetStructure.Tpo $(DEPDIR)/SetStructure.Po
#	source='src/SetStructure.cpp' object='SetStructure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SetStructure.obj `if test -f 'src/SetStructure.cpp'; then $(CYGPATH_W) 'src/SetStructure.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SetStructure.cpp'; fi`

Simann.o: src/Simann.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Simann.o -MD -MP -MF $(DEPDIR)/Simann.Tpo -c -o Simann.o `test -f 'src/Simann.cpp' || echo '$(srcdir)/'`src/Simann.cpp
	$(am__mv) $(DEPDIR)/Simann.Tpo $(DEPDIR)/Simann.Po
#	source='src/Simann.cpp' object='Simann.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Simann.o `test -f 'src/Simann.cpp' || echo '$(srcdir)/'`src/Simann.cpp

Simann.obj: src/Simann.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Simann.obj -MD -MP -MF $(DEPDIR)/Simann.Tpo -c -o Simann.obj `if test -f 'src/Simann.cpp'; then $(CYGPATH_W) 'src/Simann.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Simann.cpp'; fi`
	$(am__mv) $(DEPDIR)/Simann.Tpo $(DEPDIR)/Simann.Po
#	source='src/Simann.cpp' object='Simann.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Simann.obj `if test -f 'src/Simann.cpp'; then $(CYGPATH_W) 'src/Simann.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Simann.cpp'; fi`

UpdatePattern.o: src/UpdatePattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UpdatePattern.o -MD -MP -MF $(DEPDIR)/UpdatePattern.Tpo -c -o UpdatePattern.o `test -f 'src/UpdatePattern.cpp' || echo '$(srcdir)/'`src/UpdatePattern.cpp
	$(am__mv) $(DEPDIR)/UpdatePattern.Tpo $(DEPDIR)/UpdatePattern.Po
#	source='src/UpdatePattern.cpp' object='UpdatePattern.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UpdatePattern.o `test -f 'src/UpdatePattern.cpp' || echo '$(srcdir)/'`src/UpdatePattern.cpp

UpdatePattern.obj: src/UpdatePattern.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UpdatePattern.obj -MD -MP -MF $(DEPDIR)/UpdatePattern.Tpo -c -o UpdatePattern.obj `if test -f 'src/UpdatePattern.cpp'; then $(CYGPATH_W) 'src/UpdatePattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/UpdatePattern.cpp'; fi`
	$(am__mv) $(DEPDIR)/UpdatePattern.Tpo $(DEPDIR)/UpdatePattern.Po
#	source='src/UpdatePattern.cpp' object='UpdatePattern.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UpdatePattern.obj `if test -f 'src/UpdatePattern.cpp'; then $(CYGPATH_W) 'src/UpdatePattern.cpp'; else $(CYGPATH_W) '$(srcdir)/src/UpdatePattern.cpp'; fi`
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_docDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_docDATA

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_docDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_docDATA

#R

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
